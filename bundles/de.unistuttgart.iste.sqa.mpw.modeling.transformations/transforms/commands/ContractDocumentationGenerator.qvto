import types.EmfHelpers;
import util.BasicHelpers;

modeltype ecore uses ecore('http://www.eclipse.org/emf/2002/Ecore');

modeltype CommandModel uses "http://www.mpw.uni-stuttgart.de/behavior/command";
modeltype QueryModel uses "http://www.mpw.uni-stuttgart.de/behavior/query";

/**
  * Library for attaching documentation comments for containing conditions to a command.
  *
  * Note: Currently, it simply takes the documentation comments from input constraints.
  */
library ContractDocumentationGenerator;

query toDocumentationLines(command: CommandModel::Transformation) : String {
    var documentation := command.constraints
                               ->collect(c|c.toDocumentation())
                               ->select(doc|doc <> null and doc.length() > 0)
                               ->joinToString("<br/>\n");
    if (documentation.length() > 0) {
        documentation := "<br/>\n<br/>\n" + documentation + "\n";
    };
    assert(not documentation.oclIsInvalid()) with log("please add documentation to: " + command.name);
    return documentation;
}

query QueryModel::Constraint::toDocumentation() : String {
    return self.toDocumentationPrefix() + self.documentation;
}

query QueryModel::Constraint::toDocumentationPrefix() : String {
    if (self.oclIsTypeOf(QueryModel::ClassInvariant)) {
        return "<b>requires / ensures:</b> "
    };
    if (self.oclIsTypeOf(QueryModel::Precondition)) {
        return "<b>requires:</b> "
    };
    if (self.oclIsTypeOf(QueryModel::Postcondition)) {
        return "<b>ensures:</b> "
    };
    return "";
}
